package hr.terg.evag.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ContentAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertContentAllPropertiesEquals(Content expected, Content actual) {
        assertContentAutoGeneratedPropertiesEquals(expected, actual);
        assertContentAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertContentAllUpdatablePropertiesEquals(Content expected, Content actual) {
        assertContentUpdatableFieldsEquals(expected, actual);
        assertContentUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertContentAutoGeneratedPropertiesEquals(Content expected, Content actual) {
        assertThat(actual)
            .as("Verify Content auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertContentUpdatableFieldsEquals(Content expected, Content actual) {
        assertThat(actual)
            .as("Verify Content relevant properties")
            .satisfies(a -> assertThat(a.getFileName()).as("check fileName").isEqualTo(expected.getFileName()))
            .satisfies(a -> assertThat(a.getDateCreated()).as("check dateCreated").isEqualTo(expected.getDateCreated()))
            .satisfies(a -> assertThat(a.getContent()).as("check content").isEqualTo(expected.getContent()))
            .satisfies(a ->
                assertThat(a.getContentContentType()).as("check content contenty type").isEqualTo(expected.getContentContentType())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertContentUpdatableRelationshipsEquals(Content expected, Content actual) {
        // empty method
    }
}
