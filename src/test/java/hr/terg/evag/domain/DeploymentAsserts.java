package hr.terg.evag.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class DeploymentAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDeploymentAllPropertiesEquals(Deployment expected, Deployment actual) {
        assertDeploymentAutoGeneratedPropertiesEquals(expected, actual);
        assertDeploymentAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDeploymentAllUpdatablePropertiesEquals(Deployment expected, Deployment actual) {
        assertDeploymentUpdatableFieldsEquals(expected, actual);
        assertDeploymentUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDeploymentAutoGeneratedPropertiesEquals(Deployment expected, Deployment actual) {
        assertThat(actual)
            .as("Verify Deployment auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDeploymentUpdatableFieldsEquals(Deployment expected, Deployment actual) {
        assertThat(actual)
            .as("Verify Deployment relevant properties")
            .satisfies(a -> assertThat(a.getDeploymentDate()).as("check deploymentDate").isEqualTo(expected.getDeploymentDate()))
            .satisfies(a -> assertThat(a.getStatus()).as("check status").isEqualTo(expected.getStatus()))
            .satisfies(a -> assertThat(a.getLogs()).as("check logs").isEqualTo(expected.getLogs()))
            .satisfies(a -> assertThat(a.getAddendum()).as("check addendum").isEqualTo(expected.getAddendum()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDeploymentUpdatableRelationshipsEquals(Deployment expected, Deployment actual) {
        assertThat(actual)
            .as("Verify Deployment relationships")
            .satisfies(a -> assertThat(a.getDeliverable()).as("check deliverable").isEqualTo(expected.getDeliverable()));
    }
}
